!function(t){var e={};function s(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return t[r].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=t,s.c=e,s.d=function(t,e,r){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)s.d(r,a,function(e){return t[e]}.bind(null,a));return r},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=1)}([function(t,e,s){},function(t,e,s){"use strict";s.r(e);s(0);class r{constructor(){this._observers={fetchData:new Set,scrollBarGraph:new Set,handleForecastAnimation:new Set}}addObserver({type:t,observer:e}){this._observers[t].add(e)}removeObserver({type:t,observer:e}){this._observers[t]=[...this._observers].filter(t=>t!==e)}notify({type:t,data:e}){this._observers[t].forEach(t=>t(e))}}class a{async get(t){const e=await fetch(t);return await e.json()}}const n=(t,e,s)=>t.addEventListener(e,s),i=(t,e)=>t.querySelector(e),o={CURRENT_24HOURS:"http://34.236.160.204:8080/api/dust-status/location?",FORECAST:"http://34.236.160.204:8080/api/dust/forecast"},d=127.033419,c=37.490846,l="fetchData",h="scrollBarGraph",u={1:["😀","좋음","#4e8deb"],2:["🙂","보통","#4dd188"],3:["😷","나쁨","#f3ac41"],4:["😱","최악","#d34e44"]},p={CONTAINER:".container",VIEWPORT:".big-screen",NO_GPS:".no-gps",LOADING:".loading"},f={PANEL:".dust__panel",GRAPH:".dust__graph",EMOJI:".grade__emoji",TEXT:".grade__text",DETAILS_VALUE:".details__value",DETAILS_TIME:".details__time"},v={PANEL:".forecast__panel",IMAGES:".forecast__images",CONTROLS:".forecast__controls",BUTTON:".button",BACKGROUND:".background",CONTROLLER:".progress",OVERALL:".forecast__overall",GRADE:".forecast__grade"};function g(t,{stationName:e,data:s}){return`<div class="page dust">${function(t,{dataTime:e,pm10Value:s,pm10Grade:r}){const a=`<div class="grade__emoji">${u[r][0]}</div>`,n=`<div class="grade__text">${u[r][1]}</div>`,i=`<div class="dust__details"><span>\n\t\t\t<span class="details__value">${s}</span> 𝜇g/m³\n    </span><span class="details__time">${e}</span></div>`,o=`<div class="dust__station">\n\t\t<span class="station__name">${t}</span> 측정소 기준\n\t</div>`;return`<div class="dust__panel" style="background:linear-gradient(${u[r][2]}, #fff);"><h1>미세먼지 앱</h1>${a}${n}${i}${o}</div>`}(e,s[0])}${function(t){return`<div class="dust__graph">${t.reduce((t,{dataTime:e,pm10Value:s,pm10Grade:r})=>t+=`<div class="bar-container" data-time="${e}" data-value="${s}" data-grade="${r}">\n\t\t<div class="bar" style="width:${s/200*100}%; background:${u[r][2]};"></div>\n\t\t<span class="value">${s}</span>\n\t</div>`,"")}<div class="message">🧙‍♂️<br />최근 24시간 동안 기록된 데이터가 제공됩니다.</div></div>`}(s)}</div>`}function b(t,e){return`<div class="page forecast">${function({imageUrls:t,informOverall:e,informGrade:s}){const r=t.reduce((t,e,s)=>t+=`<img src="${e}" alt="forecast image ${s+1}" width="100%"/>`,"");return`<div class="forecast__panel"><h1>미세먼지 예보</h1>${`<div class="forecast__images">${r}</div>`}<div class="forecast__controls"><span class="button">▶️</span><div class="controller__container"><div class="background"></div><div class="progress"></div></div></div>${`<div class="forecast__overall">${e}</div>`}${`<div class="forecast__grade">${s}</div>`}</div>`}(e)}</div>`}const m=document.querySelector("header"),y=m.querySelector(".menu:first-child"),_=m.querySelector(".menu:last-child"),O=document.querySelector(".container");n(m,"touchend",t=>(t=>{const e=t.target.dataset.title;e&&("미세먼지"===e?(O.style.left=0,y.classList.add("selected"),_.classList.remove("selected")):(O.style.left="-100vw",_.classList.add("selected"),y.classList.remove("selected")))})(t));const E=new class extends r{constructor(){super(),this.http=new a,this.indexOfCurrentData=0}fetchData(){const t=`${o.CURRENT_24HOURS}longitude=${d}&latitude=${c}`;this.http.get(t).then(this.handleResponse.bind(this)).catch(this.handleError)}handleResponse(t){if(200!==t.code)throw Error(`네트워크 에러 --- ${t.code}`);this.notify({type:l,data:t}),this.hideLoadingScreen()}handleError(t){console.error(t)}showNoGpsScreen(){i(document,p.NO_GPS).style.display="flex"}hideLoadingScreen(){i(document,p.LOADING).style.display="none"}updateDisplayedData(t){this.indexOfCurrentData=t,this.notify({type:h,data:t})}},I=new class extends r{constructor(){super(),this.http=new a}fetchData(){const t=o.FORECAST;this.http.get(t).then(this.handleResponse.bind(this)).catch(this.handleError)}handleResponse(t){if(200!==t.code)throw Error(`네트워크 에러 --- ${t.code}`);this.notify({type:l,data:t.data})}handleError(t){console.error(t)}},$=new class{constructor(t){this.dustModel=t,this.dustPanel=null,this.dustGraph=null,this.dustGraphBars=null,this.previousIndexOfBar=0}subscribe(){this.dustModel.addObserver({type:l,observer:this.render}),this.dustModel.addObserver({type:l,observer:this.cacheDomElements.bind(this)}),this.dustModel.addObserver({type:l,observer:this.bindOnScrollListener.bind(this)}),this.dustModel.addObserver({type:h,observer:this.updateDustPanelView.bind(this)})}render(t){const e=g`${t}`;i(document,p.CONTAINER).insertAdjacentHTML("afterbegin",e)}cacheDomElements(){this.dustPanel=i(document,f.PANEL),this.dustGraph=i(document,f.GRAPH),this.dustGraphBars=[...this.dustGraph.children]}updateDustPanelView(t){const e=this.dustGraphBars[t];if("message"===e.className)return;const{grade:s,value:r,time:a}=e.dataset,[n,o,d]=u[s];this.dustPanel.style.background=`linear-gradient(${d}, #fff)`,i(this.dustPanel,f.EMOJI).textContent=n,i(this.dustPanel,f.TEXT).textContent=o,i(this.dustPanel,f.DETAILS_VALUE).textContent=r,i(this.dustPanel,f.DETAILS_TIME).textContent=a}barGraphScrollHandler(t){const e=Math.floor(t/20);e!==this.previousIndexOfBar&&(this.dustModel.updateDisplayedData(e),this.previousIndexOfBar=e)}bindOnScrollListener(){n(this.dustGraph,"scroll",t=>this.barGraphScrollHandler(t.target.scrollTop))}}(E),L=new class{constructor(t){this.forecastModel=t,this.forecastPanel=null,this.forecastImages=null,this.button=null,this.progressBar=null,this.playing=!1,this.currentImgIndex=0,this.timer=null,this.startPoint=null}subscribe(){this.forecastModel.addObserver({type:l,observer:this.render}),this.forecastModel.addObserver({type:l,observer:this.cacheDomElements.bind(this)}),this.forecastModel.addObserver({type:l,observer:this.handleOpacity.bind(this)}),this.forecastModel.addObserver({type:l,observer:this.bindOnClickListener.bind(this)})}render(t){const e=b`${t}`;i(document,p.CONTAINER).insertAdjacentHTML("beforeend",e)}cacheDomElements(){this.forecastPanel=i(document,v.PANEL),this.forecastImages=[...i(this.forecastPanel,v.IMAGES).children],this.button=i(this.forecastPanel,v.BUTTON),this.background=i(this.forecastPanel,v.BACKGROUND),this.progressBar=i(this.forecastPanel,v.CONTROLLER)}handleOpacity(){this.forecastImages.forEach(t=>t.style.opacity=0),this.forecastImages[0].style.opacity=1}buttonTouchHandler(){this.playing||(this.button.textContent="⏸️",this.playing=!0,this.play())}handleProgress(){const t=this.background.offsetWidth,e=Number(this.progressBar.style.width.slice(0,-2));if(e>=t)return void this.stop();const s=t/this.forecastImages.length;this.progressBar.style.width=e+s+"px"}handleImage(){const{forecastImages:t,currentImgIndex:e}=this;if(e===t.length)return this.forecastImages.forEach((t,e)=>t.style.opacity=0===e?1:0),void(this.currentImgIndex=0);this.forecastImages.forEach((t,s)=>t.style.opacity=s===e?1:0),this.currentImgIndex+=1}play(){this.progressBar.style.transition="width 0.3s ease";const t=this;this.timer=setInterval((function(){t.handleProgress.call(t),t.handleImage.call(t)}),300)}stop(){clearInterval(this.timer),this.button.textContent="▶️",this.playing=!1,this.progressBar.style.width="0px"}start(t){this.startPoint=this.background.getBoundingClientRect().x,this.progressBar.style.transition="none"}move(t){const e=this.background.offsetWidth,s=t.touches[0].clientX-this.startPoint;if(s<0||s>this.background.offsetWidth)return;this.progressBar.style.width=s+"px";const r=Number(this.progressBar.style.width.slice(0,-2)),a=e/this.forecastImages.length,n=Math.floor(r/a);this.forecastImages.forEach((t,e)=>t.style.opacity=e===n?1:0),this.handleButton()}handleButton(){Number(this.progressBar.style.width.slice(0,-2))<10?(this.button.textContent="▶️",this.playing=!1):(this.button.textContent="⏸️",this.playing=!0)}bindOnClickListener(){n(this.button,"touchend",()=>this.buttonTouchHandler()),n(this.progressBar,"touchstart",t=>this.start(t)),n(this.progressBar,"touchmove",t=>this.move(t))}}(I);window.addEventListener("DOMContentLoaded",()=>{$.subscribe(),L.subscribe(),E.fetchData(),I.fetchData()})}]);